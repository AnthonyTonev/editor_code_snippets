{
  "title": "test_package",
  "description": "",
  "package":[{"code":"\nconst arr =[\"Alex\", \"Anne\", \"Brian\", \"Chris\", \"David\", \"Elan\", \"Frank\", \"Hellen\", \"Ivan\", \"James\"];\n\nconst binarySearch = (array, target, start, end) => {\n\n\tconst mid = Math.floor(((end - start) / 2) + start);\n\tif (end <= start && array[mid] !== target) return -1;\n\telse if (array[mid] === target) return mid;\n\telse if (array[mid] < target) return binarySearch(array, target, mid + 1, end);\n\telse if (array[mid] > target) return binarySearch(array, target, start, mid - 1);\n \n\t\n}\nconst target = 'David';\nconst index = binarySearch(arr, target, 0, arr.length);\n\n","title":"bin.js","description":""},{"code":"\nconst UI = {\n  parent: document.getElementById('app_container'),\n  setParent:  (handler) => {\n  this.parent = handler;},\n  create:  function (type = '', parent, params) {\n  let parentEl;\n  if(parent instanceof HTMLElement){parentEl = parent;}\n  else{parentEl = this.parent;params = parent;}\n  switch (type) {\n    default:{\n      const element = document.createElement(type);\n      parentEl?.appendChild(element);\n        if(params){\n          for (const i in params) {\n            if(i!='textContent' && i!='innerHTML'){\n              element.setAttribute(i,params[i]);\n            }else{element[i] = params[i];}}}\n      return element;}\n      break;}},css:(css)=>{\n           document.head.appendChild(document.createElement('style'));document.createElement('style').type = 'text/css';\n           if (document.createElement('style').styleSheet){document.createElement('style').styleSheet.cssText = css;} \n           else {document.createElement('style').appendChild(document.createTextNode(css));}}\n  }\n","title":"xxx.js","description":""}]
}
