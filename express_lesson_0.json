{
  "title": "express_lesson_0",
  "description": "",
  "code":"import express from 'express';\nimport cors from 'cors';\nimport bodyParser from 'body-parser';\n\nconst app = express();\nconst PORT = 4000;\n\napp.use(cors(),bodyParser.json());\n\nconst data = [\n  \t{\n  id:0,\n  name:'John',\n  age:26\n\t},\n    \t{\n  id:1,\n  name:'Boris',\n  age:22\n\t}\n]\n\napp.get('/people',(req,res)=>{\n  const {search} = req.query;\n  const searchedPeople =  search  \n         ? data.filter((p)=>p.name.toLowerCase().includes(search.toLowerCase()))\n  \t    : data;\n  res.status(200).send(searchedPeople);\n}).get('/people/:id',(req,res)=>{\n const {id} = req.params;\n const person = data.find((p) => p.id === +id);\n  if(!person){\n     res.status(404).send({message:'Person not found'});\n    return\n  }\n  \n  res.status(200).send(person);\n}).post('/people',(req,res)=>{\n  const person = req.body;\n  if(!person.name || !person.age){\n    res.status(400).send({message:'person should have valid age'}) \n  return;\n  }\n\n  \n  const newPerson = {...person,id:data.length};\n  data.push(newPerson);\n  res.status(201).send(newPerson);\n}).put('/people/:id',(req,res)=>{\n const {id} = req.params;\n const personToUpdate = req.body;\n  if(!personToUpdate.name && !personToUpdate.age){\n   return res.status(400).send({message:'Invalid age or name'}) \n  }\n  const personIndex = data.findIndex((p)=>p.id === +id);\n  if(personIndex ===-1){\n    res.status(404).send({message:'Not found'});\n    return;\n  }\n  \n  const person = data[personIndex];\n  data.splice(personIndex,1);\n  res.status(200).send(person);\n})\n  \napp.listen(PORT,()=>console.log('Listening on port '+ PORT));\n  \n  \n\n\n\n\n\n\n\n\n"
}
