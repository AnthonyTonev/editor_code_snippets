{
  "title": "todoapp_express_0",
  "description": "",
  "code":"import express from 'express';\nimport bodyParser from 'body-parser';\n\nconst PORT = 5000;\nconst app = express();\n\napp.use(bodyParser.json());\nconst todos = [\n  {\n    id: 1,\n    name: 'Buy milk',\n    due: '2021-05-02',\n    isDone: false,\n    isDeleted: false,\n  },\n  {\n    id: 2,\n    name: 'Learn JavaScript',\n    due: '2021-09-02',\n    isDone: false,\n    isDeleted: false,\n  },\n];\n\nconst formatDate = (due = '') =>{\nconst date_array = due.trim().split('/');\nif(!date_array || date_array.length!==3) return null;\n  \nconst date = new Date(date_array[2], date_array[1], date_array[0]);\nconst ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);\nconst mo = new Intl.DateTimeFormat('en', { month: 'numeric' }).format(date);\nconst da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date); \n\n  return `${da}/${mo}/${ye}`;\n};\napp.get('/todos', (req, res) => {\nconst data = todos.filter(item=>!item.isDeleted);  \nres.status(200).send(data);\n});\napp.post('/todos', (req, res) => {\nconst {name,due} = req.body;\nconst formated_date = formatDate(due);\nif(!name.trim() && !formated_date){\n res.status(400).send({message:'invalid data'});\n  return;\n}\nconst todo = {name,formated_date,id:todos.length+1,isDone:false,isDeleted:false};\n  console.log(todo)\ntodos.push(todo);\nres.status(200).send(todo);\n});\napp.get('/todos/:id', (req, res) => {\nconst id = req.params.id;\nconst index = todos.findIndex(item=>item.id===+id);\nconst todo = todos[index];\nif(!todo || todo.isDeleted){\n  res.status(404).send({message:'todo not found'});\n  return;\n}  \nres.status(200).send(todo);\n});\n\napp.put('/todos/:id', (req, res) => {\nconst id = req.params.id;\nconst index = todos.findIndex(item=>item.id===+id);\nconst todo = todos[index];\nif(!todo || todo.isDeleted){\n  res.status(404).send({message:'todo not found'});\n  return;\n}  \n  \nconst name = req.body.name || todo.due;\nconst due = formatDate(req.body.due) || todo.due;\nconst isDone = typeof req.body.isDone === 'boolean' ?  req.body.isDone : todo.isDone;\n\nif(!name.trim() || !due){\n res.status(400).send({message:'invalid data'});\n return;\n}\n\ntodo.name = name;\ntodo.due = due;\ntodo.isDone = isDone;\nres.status(200).send(todo);\n});\n\n\napp.delete('/todos/:id', (req, res) => {\nconst id = req.params.id;\nconst index = todos.findIndex(item=>item.id===+id);\nconst todo = todos[index];\nif(!todo || todo.isDeleted){\n  res.status(404).send({message:'todo not found'});\n  return;\n}  \ntodo.isDeleted = true;\nres.status(200).send(todo);\n});\napp.listen(PORT, () => console.log(`App is listening on port ${PORT}`));\n"
}
